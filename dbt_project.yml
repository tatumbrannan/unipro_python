# Project name + version 
name: 'unipro_python'
version: '1.3.0'
config-version: 2

# This setting will set a helpful error message for user that are attempting to run
# the project with an unsupported verion. 
require-dbt-version: '>=1.4.5'

profile: 'unipro_python'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]

# target-path, clean-targets, vars, and models configurations go here

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models
vars:
  schema_name: dbt_tbrannan
  SMTP_SERVER: smtp.gmail.com
  SENDER_EMAIL: tatum.brannan@redpillanalytics.com
  RECIPIENT_EMAIL: tatum.brannan@redpillanalytics.com
  SMTP_PORT: 587
  SMTP_USERNAME: tatum.brannan
  SMTP_PASSWORD: Doodletoot1
  SNOWFLAKE_USERNAME: tatumbrannan
  SNOWFLAKE_PASSWORD: Doodletoot1
  SNOWFLAKE_ACCOUNT: redpill
  SNOWFLAKE_WAREHOUSE: DEMO_WH
  SNOWFLAKE_DATABASE: snowflake_101
  SNOWFLAKE_SCHEMA: dbt_tbrannan
  error_logging_enabled: true
  PYTHON_EXECUTABLE: /usr/bin/python3


models:
  +persist_docs:
        relation: true
        columns: true

  staging:
    +post-hook:
      - "{{ create_error_log_table(target.schema) }}"
    +schema: staging
    +materialized: table

  transform:
    +schema: staging
    +materialized: table

  reporting:
    +schema: reporting_star
    +materialized: table
